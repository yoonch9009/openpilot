#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5016230871221336976) {
   out_5016230871221336976[0] = 0;
   out_5016230871221336976[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5016230871221336976[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5016230871221336976[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5016230871221336976[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5016230871221336976[5] = -sin(in_vec[1]);
   out_5016230871221336976[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5016230871221336976[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5016230871221336976[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5016230871221336976[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5016230871221336976[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5016230871221336976[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5016230871221336976[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5016230871221336976[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5016230871221336976[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5016230871221336976[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5016230871221336976[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5016230871221336976[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5032561234954820223) {
   out_5032561234954820223[0] = delta_x[0] + nom_x[0];
   out_5032561234954820223[1] = delta_x[1] + nom_x[1];
   out_5032561234954820223[2] = delta_x[2] + nom_x[2];
   out_5032561234954820223[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5032561234954820223[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5032561234954820223[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5032561234954820223[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5032561234954820223[7] = delta_x[6] + nom_x[7];
   out_5032561234954820223[8] = delta_x[7] + nom_x[8];
   out_5032561234954820223[9] = delta_x[8] + nom_x[9];
   out_5032561234954820223[10] = delta_x[9] + nom_x[10];
   out_5032561234954820223[11] = delta_x[10] + nom_x[11];
   out_5032561234954820223[12] = delta_x[11] + nom_x[12];
   out_5032561234954820223[13] = delta_x[12] + nom_x[13];
   out_5032561234954820223[14] = delta_x[13] + nom_x[14];
   out_5032561234954820223[15] = delta_x[14] + nom_x[15];
   out_5032561234954820223[16] = delta_x[15] + nom_x[16];
   out_5032561234954820223[17] = delta_x[16] + nom_x[17];
   out_5032561234954820223[18] = delta_x[17] + nom_x[18];
   out_5032561234954820223[19] = delta_x[18] + nom_x[19];
   out_5032561234954820223[20] = delta_x[19] + nom_x[20];
   out_5032561234954820223[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7628702518424614071) {
   out_7628702518424614071[0] = -nom_x[0] + true_x[0];
   out_7628702518424614071[1] = -nom_x[1] + true_x[1];
   out_7628702518424614071[2] = -nom_x[2] + true_x[2];
   out_7628702518424614071[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7628702518424614071[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7628702518424614071[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7628702518424614071[6] = -nom_x[7] + true_x[7];
   out_7628702518424614071[7] = -nom_x[8] + true_x[8];
   out_7628702518424614071[8] = -nom_x[9] + true_x[9];
   out_7628702518424614071[9] = -nom_x[10] + true_x[10];
   out_7628702518424614071[10] = -nom_x[11] + true_x[11];
   out_7628702518424614071[11] = -nom_x[12] + true_x[12];
   out_7628702518424614071[12] = -nom_x[13] + true_x[13];
   out_7628702518424614071[13] = -nom_x[14] + true_x[14];
   out_7628702518424614071[14] = -nom_x[15] + true_x[15];
   out_7628702518424614071[15] = -nom_x[16] + true_x[16];
   out_7628702518424614071[16] = -nom_x[17] + true_x[17];
   out_7628702518424614071[17] = -nom_x[18] + true_x[18];
   out_7628702518424614071[18] = -nom_x[19] + true_x[19];
   out_7628702518424614071[19] = -nom_x[20] + true_x[20];
   out_7628702518424614071[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5936276057900918229) {
   out_5936276057900918229[0] = 1.0;
   out_5936276057900918229[1] = 0;
   out_5936276057900918229[2] = 0;
   out_5936276057900918229[3] = 0;
   out_5936276057900918229[4] = 0;
   out_5936276057900918229[5] = 0;
   out_5936276057900918229[6] = 0;
   out_5936276057900918229[7] = 0;
   out_5936276057900918229[8] = 0;
   out_5936276057900918229[9] = 0;
   out_5936276057900918229[10] = 0;
   out_5936276057900918229[11] = 0;
   out_5936276057900918229[12] = 0;
   out_5936276057900918229[13] = 0;
   out_5936276057900918229[14] = 0;
   out_5936276057900918229[15] = 0;
   out_5936276057900918229[16] = 0;
   out_5936276057900918229[17] = 0;
   out_5936276057900918229[18] = 0;
   out_5936276057900918229[19] = 0;
   out_5936276057900918229[20] = 0;
   out_5936276057900918229[21] = 0;
   out_5936276057900918229[22] = 1.0;
   out_5936276057900918229[23] = 0;
   out_5936276057900918229[24] = 0;
   out_5936276057900918229[25] = 0;
   out_5936276057900918229[26] = 0;
   out_5936276057900918229[27] = 0;
   out_5936276057900918229[28] = 0;
   out_5936276057900918229[29] = 0;
   out_5936276057900918229[30] = 0;
   out_5936276057900918229[31] = 0;
   out_5936276057900918229[32] = 0;
   out_5936276057900918229[33] = 0;
   out_5936276057900918229[34] = 0;
   out_5936276057900918229[35] = 0;
   out_5936276057900918229[36] = 0;
   out_5936276057900918229[37] = 0;
   out_5936276057900918229[38] = 0;
   out_5936276057900918229[39] = 0;
   out_5936276057900918229[40] = 0;
   out_5936276057900918229[41] = 0;
   out_5936276057900918229[42] = 0;
   out_5936276057900918229[43] = 0;
   out_5936276057900918229[44] = 1.0;
   out_5936276057900918229[45] = 0;
   out_5936276057900918229[46] = 0;
   out_5936276057900918229[47] = 0;
   out_5936276057900918229[48] = 0;
   out_5936276057900918229[49] = 0;
   out_5936276057900918229[50] = 0;
   out_5936276057900918229[51] = 0;
   out_5936276057900918229[52] = 0;
   out_5936276057900918229[53] = 0;
   out_5936276057900918229[54] = 0;
   out_5936276057900918229[55] = 0;
   out_5936276057900918229[56] = 0;
   out_5936276057900918229[57] = 0;
   out_5936276057900918229[58] = 0;
   out_5936276057900918229[59] = 0;
   out_5936276057900918229[60] = 0;
   out_5936276057900918229[61] = 0;
   out_5936276057900918229[62] = 0;
   out_5936276057900918229[63] = 0;
   out_5936276057900918229[64] = 0;
   out_5936276057900918229[65] = 0;
   out_5936276057900918229[66] = -0.5*state[4];
   out_5936276057900918229[67] = -0.5*state[5];
   out_5936276057900918229[68] = -0.5*state[6];
   out_5936276057900918229[69] = 0;
   out_5936276057900918229[70] = 0;
   out_5936276057900918229[71] = 0;
   out_5936276057900918229[72] = 0;
   out_5936276057900918229[73] = 0;
   out_5936276057900918229[74] = 0;
   out_5936276057900918229[75] = 0;
   out_5936276057900918229[76] = 0;
   out_5936276057900918229[77] = 0;
   out_5936276057900918229[78] = 0;
   out_5936276057900918229[79] = 0;
   out_5936276057900918229[80] = 0;
   out_5936276057900918229[81] = 0;
   out_5936276057900918229[82] = 0;
   out_5936276057900918229[83] = 0;
   out_5936276057900918229[84] = 0;
   out_5936276057900918229[85] = 0;
   out_5936276057900918229[86] = 0;
   out_5936276057900918229[87] = 0.5*state[3];
   out_5936276057900918229[88] = 0.5*state[6];
   out_5936276057900918229[89] = -0.5*state[5];
   out_5936276057900918229[90] = 0;
   out_5936276057900918229[91] = 0;
   out_5936276057900918229[92] = 0;
   out_5936276057900918229[93] = 0;
   out_5936276057900918229[94] = 0;
   out_5936276057900918229[95] = 0;
   out_5936276057900918229[96] = 0;
   out_5936276057900918229[97] = 0;
   out_5936276057900918229[98] = 0;
   out_5936276057900918229[99] = 0;
   out_5936276057900918229[100] = 0;
   out_5936276057900918229[101] = 0;
   out_5936276057900918229[102] = 0;
   out_5936276057900918229[103] = 0;
   out_5936276057900918229[104] = 0;
   out_5936276057900918229[105] = 0;
   out_5936276057900918229[106] = 0;
   out_5936276057900918229[107] = 0;
   out_5936276057900918229[108] = -0.5*state[6];
   out_5936276057900918229[109] = 0.5*state[3];
   out_5936276057900918229[110] = 0.5*state[4];
   out_5936276057900918229[111] = 0;
   out_5936276057900918229[112] = 0;
   out_5936276057900918229[113] = 0;
   out_5936276057900918229[114] = 0;
   out_5936276057900918229[115] = 0;
   out_5936276057900918229[116] = 0;
   out_5936276057900918229[117] = 0;
   out_5936276057900918229[118] = 0;
   out_5936276057900918229[119] = 0;
   out_5936276057900918229[120] = 0;
   out_5936276057900918229[121] = 0;
   out_5936276057900918229[122] = 0;
   out_5936276057900918229[123] = 0;
   out_5936276057900918229[124] = 0;
   out_5936276057900918229[125] = 0;
   out_5936276057900918229[126] = 0;
   out_5936276057900918229[127] = 0;
   out_5936276057900918229[128] = 0;
   out_5936276057900918229[129] = 0.5*state[5];
   out_5936276057900918229[130] = -0.5*state[4];
   out_5936276057900918229[131] = 0.5*state[3];
   out_5936276057900918229[132] = 0;
   out_5936276057900918229[133] = 0;
   out_5936276057900918229[134] = 0;
   out_5936276057900918229[135] = 0;
   out_5936276057900918229[136] = 0;
   out_5936276057900918229[137] = 0;
   out_5936276057900918229[138] = 0;
   out_5936276057900918229[139] = 0;
   out_5936276057900918229[140] = 0;
   out_5936276057900918229[141] = 0;
   out_5936276057900918229[142] = 0;
   out_5936276057900918229[143] = 0;
   out_5936276057900918229[144] = 0;
   out_5936276057900918229[145] = 0;
   out_5936276057900918229[146] = 0;
   out_5936276057900918229[147] = 0;
   out_5936276057900918229[148] = 0;
   out_5936276057900918229[149] = 0;
   out_5936276057900918229[150] = 0;
   out_5936276057900918229[151] = 0;
   out_5936276057900918229[152] = 0;
   out_5936276057900918229[153] = 1.0;
   out_5936276057900918229[154] = 0;
   out_5936276057900918229[155] = 0;
   out_5936276057900918229[156] = 0;
   out_5936276057900918229[157] = 0;
   out_5936276057900918229[158] = 0;
   out_5936276057900918229[159] = 0;
   out_5936276057900918229[160] = 0;
   out_5936276057900918229[161] = 0;
   out_5936276057900918229[162] = 0;
   out_5936276057900918229[163] = 0;
   out_5936276057900918229[164] = 0;
   out_5936276057900918229[165] = 0;
   out_5936276057900918229[166] = 0;
   out_5936276057900918229[167] = 0;
   out_5936276057900918229[168] = 0;
   out_5936276057900918229[169] = 0;
   out_5936276057900918229[170] = 0;
   out_5936276057900918229[171] = 0;
   out_5936276057900918229[172] = 0;
   out_5936276057900918229[173] = 0;
   out_5936276057900918229[174] = 0;
   out_5936276057900918229[175] = 1.0;
   out_5936276057900918229[176] = 0;
   out_5936276057900918229[177] = 0;
   out_5936276057900918229[178] = 0;
   out_5936276057900918229[179] = 0;
   out_5936276057900918229[180] = 0;
   out_5936276057900918229[181] = 0;
   out_5936276057900918229[182] = 0;
   out_5936276057900918229[183] = 0;
   out_5936276057900918229[184] = 0;
   out_5936276057900918229[185] = 0;
   out_5936276057900918229[186] = 0;
   out_5936276057900918229[187] = 0;
   out_5936276057900918229[188] = 0;
   out_5936276057900918229[189] = 0;
   out_5936276057900918229[190] = 0;
   out_5936276057900918229[191] = 0;
   out_5936276057900918229[192] = 0;
   out_5936276057900918229[193] = 0;
   out_5936276057900918229[194] = 0;
   out_5936276057900918229[195] = 0;
   out_5936276057900918229[196] = 0;
   out_5936276057900918229[197] = 1.0;
   out_5936276057900918229[198] = 0;
   out_5936276057900918229[199] = 0;
   out_5936276057900918229[200] = 0;
   out_5936276057900918229[201] = 0;
   out_5936276057900918229[202] = 0;
   out_5936276057900918229[203] = 0;
   out_5936276057900918229[204] = 0;
   out_5936276057900918229[205] = 0;
   out_5936276057900918229[206] = 0;
   out_5936276057900918229[207] = 0;
   out_5936276057900918229[208] = 0;
   out_5936276057900918229[209] = 0;
   out_5936276057900918229[210] = 0;
   out_5936276057900918229[211] = 0;
   out_5936276057900918229[212] = 0;
   out_5936276057900918229[213] = 0;
   out_5936276057900918229[214] = 0;
   out_5936276057900918229[215] = 0;
   out_5936276057900918229[216] = 0;
   out_5936276057900918229[217] = 0;
   out_5936276057900918229[218] = 0;
   out_5936276057900918229[219] = 1.0;
   out_5936276057900918229[220] = 0;
   out_5936276057900918229[221] = 0;
   out_5936276057900918229[222] = 0;
   out_5936276057900918229[223] = 0;
   out_5936276057900918229[224] = 0;
   out_5936276057900918229[225] = 0;
   out_5936276057900918229[226] = 0;
   out_5936276057900918229[227] = 0;
   out_5936276057900918229[228] = 0;
   out_5936276057900918229[229] = 0;
   out_5936276057900918229[230] = 0;
   out_5936276057900918229[231] = 0;
   out_5936276057900918229[232] = 0;
   out_5936276057900918229[233] = 0;
   out_5936276057900918229[234] = 0;
   out_5936276057900918229[235] = 0;
   out_5936276057900918229[236] = 0;
   out_5936276057900918229[237] = 0;
   out_5936276057900918229[238] = 0;
   out_5936276057900918229[239] = 0;
   out_5936276057900918229[240] = 0;
   out_5936276057900918229[241] = 1.0;
   out_5936276057900918229[242] = 0;
   out_5936276057900918229[243] = 0;
   out_5936276057900918229[244] = 0;
   out_5936276057900918229[245] = 0;
   out_5936276057900918229[246] = 0;
   out_5936276057900918229[247] = 0;
   out_5936276057900918229[248] = 0;
   out_5936276057900918229[249] = 0;
   out_5936276057900918229[250] = 0;
   out_5936276057900918229[251] = 0;
   out_5936276057900918229[252] = 0;
   out_5936276057900918229[253] = 0;
   out_5936276057900918229[254] = 0;
   out_5936276057900918229[255] = 0;
   out_5936276057900918229[256] = 0;
   out_5936276057900918229[257] = 0;
   out_5936276057900918229[258] = 0;
   out_5936276057900918229[259] = 0;
   out_5936276057900918229[260] = 0;
   out_5936276057900918229[261] = 0;
   out_5936276057900918229[262] = 0;
   out_5936276057900918229[263] = 1.0;
   out_5936276057900918229[264] = 0;
   out_5936276057900918229[265] = 0;
   out_5936276057900918229[266] = 0;
   out_5936276057900918229[267] = 0;
   out_5936276057900918229[268] = 0;
   out_5936276057900918229[269] = 0;
   out_5936276057900918229[270] = 0;
   out_5936276057900918229[271] = 0;
   out_5936276057900918229[272] = 0;
   out_5936276057900918229[273] = 0;
   out_5936276057900918229[274] = 0;
   out_5936276057900918229[275] = 0;
   out_5936276057900918229[276] = 0;
   out_5936276057900918229[277] = 0;
   out_5936276057900918229[278] = 0;
   out_5936276057900918229[279] = 0;
   out_5936276057900918229[280] = 0;
   out_5936276057900918229[281] = 0;
   out_5936276057900918229[282] = 0;
   out_5936276057900918229[283] = 0;
   out_5936276057900918229[284] = 0;
   out_5936276057900918229[285] = 1.0;
   out_5936276057900918229[286] = 0;
   out_5936276057900918229[287] = 0;
   out_5936276057900918229[288] = 0;
   out_5936276057900918229[289] = 0;
   out_5936276057900918229[290] = 0;
   out_5936276057900918229[291] = 0;
   out_5936276057900918229[292] = 0;
   out_5936276057900918229[293] = 0;
   out_5936276057900918229[294] = 0;
   out_5936276057900918229[295] = 0;
   out_5936276057900918229[296] = 0;
   out_5936276057900918229[297] = 0;
   out_5936276057900918229[298] = 0;
   out_5936276057900918229[299] = 0;
   out_5936276057900918229[300] = 0;
   out_5936276057900918229[301] = 0;
   out_5936276057900918229[302] = 0;
   out_5936276057900918229[303] = 0;
   out_5936276057900918229[304] = 0;
   out_5936276057900918229[305] = 0;
   out_5936276057900918229[306] = 0;
   out_5936276057900918229[307] = 1.0;
   out_5936276057900918229[308] = 0;
   out_5936276057900918229[309] = 0;
   out_5936276057900918229[310] = 0;
   out_5936276057900918229[311] = 0;
   out_5936276057900918229[312] = 0;
   out_5936276057900918229[313] = 0;
   out_5936276057900918229[314] = 0;
   out_5936276057900918229[315] = 0;
   out_5936276057900918229[316] = 0;
   out_5936276057900918229[317] = 0;
   out_5936276057900918229[318] = 0;
   out_5936276057900918229[319] = 0;
   out_5936276057900918229[320] = 0;
   out_5936276057900918229[321] = 0;
   out_5936276057900918229[322] = 0;
   out_5936276057900918229[323] = 0;
   out_5936276057900918229[324] = 0;
   out_5936276057900918229[325] = 0;
   out_5936276057900918229[326] = 0;
   out_5936276057900918229[327] = 0;
   out_5936276057900918229[328] = 0;
   out_5936276057900918229[329] = 1.0;
   out_5936276057900918229[330] = 0;
   out_5936276057900918229[331] = 0;
   out_5936276057900918229[332] = 0;
   out_5936276057900918229[333] = 0;
   out_5936276057900918229[334] = 0;
   out_5936276057900918229[335] = 0;
   out_5936276057900918229[336] = 0;
   out_5936276057900918229[337] = 0;
   out_5936276057900918229[338] = 0;
   out_5936276057900918229[339] = 0;
   out_5936276057900918229[340] = 0;
   out_5936276057900918229[341] = 0;
   out_5936276057900918229[342] = 0;
   out_5936276057900918229[343] = 0;
   out_5936276057900918229[344] = 0;
   out_5936276057900918229[345] = 0;
   out_5936276057900918229[346] = 0;
   out_5936276057900918229[347] = 0;
   out_5936276057900918229[348] = 0;
   out_5936276057900918229[349] = 0;
   out_5936276057900918229[350] = 0;
   out_5936276057900918229[351] = 1.0;
   out_5936276057900918229[352] = 0;
   out_5936276057900918229[353] = 0;
   out_5936276057900918229[354] = 0;
   out_5936276057900918229[355] = 0;
   out_5936276057900918229[356] = 0;
   out_5936276057900918229[357] = 0;
   out_5936276057900918229[358] = 0;
   out_5936276057900918229[359] = 0;
   out_5936276057900918229[360] = 0;
   out_5936276057900918229[361] = 0;
   out_5936276057900918229[362] = 0;
   out_5936276057900918229[363] = 0;
   out_5936276057900918229[364] = 0;
   out_5936276057900918229[365] = 0;
   out_5936276057900918229[366] = 0;
   out_5936276057900918229[367] = 0;
   out_5936276057900918229[368] = 0;
   out_5936276057900918229[369] = 0;
   out_5936276057900918229[370] = 0;
   out_5936276057900918229[371] = 0;
   out_5936276057900918229[372] = 0;
   out_5936276057900918229[373] = 1.0;
   out_5936276057900918229[374] = 0;
   out_5936276057900918229[375] = 0;
   out_5936276057900918229[376] = 0;
   out_5936276057900918229[377] = 0;
   out_5936276057900918229[378] = 0;
   out_5936276057900918229[379] = 0;
   out_5936276057900918229[380] = 0;
   out_5936276057900918229[381] = 0;
   out_5936276057900918229[382] = 0;
   out_5936276057900918229[383] = 0;
   out_5936276057900918229[384] = 0;
   out_5936276057900918229[385] = 0;
   out_5936276057900918229[386] = 0;
   out_5936276057900918229[387] = 0;
   out_5936276057900918229[388] = 0;
   out_5936276057900918229[389] = 0;
   out_5936276057900918229[390] = 0;
   out_5936276057900918229[391] = 0;
   out_5936276057900918229[392] = 0;
   out_5936276057900918229[393] = 0;
   out_5936276057900918229[394] = 0;
   out_5936276057900918229[395] = 1.0;
   out_5936276057900918229[396] = 0;
   out_5936276057900918229[397] = 0;
   out_5936276057900918229[398] = 0;
   out_5936276057900918229[399] = 0;
   out_5936276057900918229[400] = 0;
   out_5936276057900918229[401] = 0;
   out_5936276057900918229[402] = 0;
   out_5936276057900918229[403] = 0;
   out_5936276057900918229[404] = 0;
   out_5936276057900918229[405] = 0;
   out_5936276057900918229[406] = 0;
   out_5936276057900918229[407] = 0;
   out_5936276057900918229[408] = 0;
   out_5936276057900918229[409] = 0;
   out_5936276057900918229[410] = 0;
   out_5936276057900918229[411] = 0;
   out_5936276057900918229[412] = 0;
   out_5936276057900918229[413] = 0;
   out_5936276057900918229[414] = 0;
   out_5936276057900918229[415] = 0;
   out_5936276057900918229[416] = 0;
   out_5936276057900918229[417] = 1.0;
   out_5936276057900918229[418] = 0;
   out_5936276057900918229[419] = 0;
   out_5936276057900918229[420] = 0;
   out_5936276057900918229[421] = 0;
   out_5936276057900918229[422] = 0;
   out_5936276057900918229[423] = 0;
   out_5936276057900918229[424] = 0;
   out_5936276057900918229[425] = 0;
   out_5936276057900918229[426] = 0;
   out_5936276057900918229[427] = 0;
   out_5936276057900918229[428] = 0;
   out_5936276057900918229[429] = 0;
   out_5936276057900918229[430] = 0;
   out_5936276057900918229[431] = 0;
   out_5936276057900918229[432] = 0;
   out_5936276057900918229[433] = 0;
   out_5936276057900918229[434] = 0;
   out_5936276057900918229[435] = 0;
   out_5936276057900918229[436] = 0;
   out_5936276057900918229[437] = 0;
   out_5936276057900918229[438] = 0;
   out_5936276057900918229[439] = 1.0;
   out_5936276057900918229[440] = 0;
   out_5936276057900918229[441] = 0;
   out_5936276057900918229[442] = 0;
   out_5936276057900918229[443] = 0;
   out_5936276057900918229[444] = 0;
   out_5936276057900918229[445] = 0;
   out_5936276057900918229[446] = 0;
   out_5936276057900918229[447] = 0;
   out_5936276057900918229[448] = 0;
   out_5936276057900918229[449] = 0;
   out_5936276057900918229[450] = 0;
   out_5936276057900918229[451] = 0;
   out_5936276057900918229[452] = 0;
   out_5936276057900918229[453] = 0;
   out_5936276057900918229[454] = 0;
   out_5936276057900918229[455] = 0;
   out_5936276057900918229[456] = 0;
   out_5936276057900918229[457] = 0;
   out_5936276057900918229[458] = 0;
   out_5936276057900918229[459] = 0;
   out_5936276057900918229[460] = 0;
   out_5936276057900918229[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7894718411447825024) {
   out_7894718411447825024[0] = dt*state[7] + state[0];
   out_7894718411447825024[1] = dt*state[8] + state[1];
   out_7894718411447825024[2] = dt*state[9] + state[2];
   out_7894718411447825024[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7894718411447825024[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7894718411447825024[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7894718411447825024[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7894718411447825024[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7894718411447825024[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7894718411447825024[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7894718411447825024[10] = state[10];
   out_7894718411447825024[11] = state[11];
   out_7894718411447825024[12] = state[12];
   out_7894718411447825024[13] = state[13];
   out_7894718411447825024[14] = state[14];
   out_7894718411447825024[15] = state[15];
   out_7894718411447825024[16] = state[16];
   out_7894718411447825024[17] = state[17];
   out_7894718411447825024[18] = state[18];
   out_7894718411447825024[19] = state[19];
   out_7894718411447825024[20] = state[20];
   out_7894718411447825024[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6912177265995715584) {
   out_6912177265995715584[0] = 1;
   out_6912177265995715584[1] = 0;
   out_6912177265995715584[2] = 0;
   out_6912177265995715584[3] = 0;
   out_6912177265995715584[4] = 0;
   out_6912177265995715584[5] = 0;
   out_6912177265995715584[6] = dt;
   out_6912177265995715584[7] = 0;
   out_6912177265995715584[8] = 0;
   out_6912177265995715584[9] = 0;
   out_6912177265995715584[10] = 0;
   out_6912177265995715584[11] = 0;
   out_6912177265995715584[12] = 0;
   out_6912177265995715584[13] = 0;
   out_6912177265995715584[14] = 0;
   out_6912177265995715584[15] = 0;
   out_6912177265995715584[16] = 0;
   out_6912177265995715584[17] = 0;
   out_6912177265995715584[18] = 0;
   out_6912177265995715584[19] = 0;
   out_6912177265995715584[20] = 0;
   out_6912177265995715584[21] = 0;
   out_6912177265995715584[22] = 1;
   out_6912177265995715584[23] = 0;
   out_6912177265995715584[24] = 0;
   out_6912177265995715584[25] = 0;
   out_6912177265995715584[26] = 0;
   out_6912177265995715584[27] = 0;
   out_6912177265995715584[28] = dt;
   out_6912177265995715584[29] = 0;
   out_6912177265995715584[30] = 0;
   out_6912177265995715584[31] = 0;
   out_6912177265995715584[32] = 0;
   out_6912177265995715584[33] = 0;
   out_6912177265995715584[34] = 0;
   out_6912177265995715584[35] = 0;
   out_6912177265995715584[36] = 0;
   out_6912177265995715584[37] = 0;
   out_6912177265995715584[38] = 0;
   out_6912177265995715584[39] = 0;
   out_6912177265995715584[40] = 0;
   out_6912177265995715584[41] = 0;
   out_6912177265995715584[42] = 0;
   out_6912177265995715584[43] = 0;
   out_6912177265995715584[44] = 1;
   out_6912177265995715584[45] = 0;
   out_6912177265995715584[46] = 0;
   out_6912177265995715584[47] = 0;
   out_6912177265995715584[48] = 0;
   out_6912177265995715584[49] = 0;
   out_6912177265995715584[50] = dt;
   out_6912177265995715584[51] = 0;
   out_6912177265995715584[52] = 0;
   out_6912177265995715584[53] = 0;
   out_6912177265995715584[54] = 0;
   out_6912177265995715584[55] = 0;
   out_6912177265995715584[56] = 0;
   out_6912177265995715584[57] = 0;
   out_6912177265995715584[58] = 0;
   out_6912177265995715584[59] = 0;
   out_6912177265995715584[60] = 0;
   out_6912177265995715584[61] = 0;
   out_6912177265995715584[62] = 0;
   out_6912177265995715584[63] = 0;
   out_6912177265995715584[64] = 0;
   out_6912177265995715584[65] = 0;
   out_6912177265995715584[66] = 1;
   out_6912177265995715584[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6912177265995715584[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6912177265995715584[69] = 0;
   out_6912177265995715584[70] = 0;
   out_6912177265995715584[71] = 0;
   out_6912177265995715584[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6912177265995715584[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6912177265995715584[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6912177265995715584[75] = 0;
   out_6912177265995715584[76] = 0;
   out_6912177265995715584[77] = 0;
   out_6912177265995715584[78] = 0;
   out_6912177265995715584[79] = 0;
   out_6912177265995715584[80] = 0;
   out_6912177265995715584[81] = 0;
   out_6912177265995715584[82] = 0;
   out_6912177265995715584[83] = 0;
   out_6912177265995715584[84] = 0;
   out_6912177265995715584[85] = 0;
   out_6912177265995715584[86] = 0;
   out_6912177265995715584[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6912177265995715584[88] = 1;
   out_6912177265995715584[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6912177265995715584[90] = 0;
   out_6912177265995715584[91] = 0;
   out_6912177265995715584[92] = 0;
   out_6912177265995715584[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6912177265995715584[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6912177265995715584[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6912177265995715584[96] = 0;
   out_6912177265995715584[97] = 0;
   out_6912177265995715584[98] = 0;
   out_6912177265995715584[99] = 0;
   out_6912177265995715584[100] = 0;
   out_6912177265995715584[101] = 0;
   out_6912177265995715584[102] = 0;
   out_6912177265995715584[103] = 0;
   out_6912177265995715584[104] = 0;
   out_6912177265995715584[105] = 0;
   out_6912177265995715584[106] = 0;
   out_6912177265995715584[107] = 0;
   out_6912177265995715584[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6912177265995715584[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6912177265995715584[110] = 1;
   out_6912177265995715584[111] = 0;
   out_6912177265995715584[112] = 0;
   out_6912177265995715584[113] = 0;
   out_6912177265995715584[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6912177265995715584[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6912177265995715584[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6912177265995715584[117] = 0;
   out_6912177265995715584[118] = 0;
   out_6912177265995715584[119] = 0;
   out_6912177265995715584[120] = 0;
   out_6912177265995715584[121] = 0;
   out_6912177265995715584[122] = 0;
   out_6912177265995715584[123] = 0;
   out_6912177265995715584[124] = 0;
   out_6912177265995715584[125] = 0;
   out_6912177265995715584[126] = 0;
   out_6912177265995715584[127] = 0;
   out_6912177265995715584[128] = 0;
   out_6912177265995715584[129] = 0;
   out_6912177265995715584[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6912177265995715584[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6912177265995715584[132] = 1;
   out_6912177265995715584[133] = 0;
   out_6912177265995715584[134] = 0;
   out_6912177265995715584[135] = 0;
   out_6912177265995715584[136] = 0;
   out_6912177265995715584[137] = 0;
   out_6912177265995715584[138] = 0;
   out_6912177265995715584[139] = 0;
   out_6912177265995715584[140] = 0;
   out_6912177265995715584[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6912177265995715584[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6912177265995715584[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6912177265995715584[144] = 0;
   out_6912177265995715584[145] = 0;
   out_6912177265995715584[146] = 0;
   out_6912177265995715584[147] = 0;
   out_6912177265995715584[148] = 0;
   out_6912177265995715584[149] = 0;
   out_6912177265995715584[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6912177265995715584[151] = 0;
   out_6912177265995715584[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6912177265995715584[153] = 0;
   out_6912177265995715584[154] = 1;
   out_6912177265995715584[155] = 0;
   out_6912177265995715584[156] = 0;
   out_6912177265995715584[157] = 0;
   out_6912177265995715584[158] = 0;
   out_6912177265995715584[159] = 0;
   out_6912177265995715584[160] = 0;
   out_6912177265995715584[161] = 0;
   out_6912177265995715584[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6912177265995715584[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6912177265995715584[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6912177265995715584[165] = 0;
   out_6912177265995715584[166] = 0;
   out_6912177265995715584[167] = 0;
   out_6912177265995715584[168] = 0;
   out_6912177265995715584[169] = 0;
   out_6912177265995715584[170] = 0;
   out_6912177265995715584[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6912177265995715584[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6912177265995715584[173] = 0;
   out_6912177265995715584[174] = 0;
   out_6912177265995715584[175] = 0;
   out_6912177265995715584[176] = 1;
   out_6912177265995715584[177] = 0;
   out_6912177265995715584[178] = 0;
   out_6912177265995715584[179] = 0;
   out_6912177265995715584[180] = 0;
   out_6912177265995715584[181] = 0;
   out_6912177265995715584[182] = 0;
   out_6912177265995715584[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6912177265995715584[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6912177265995715584[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6912177265995715584[186] = 0;
   out_6912177265995715584[187] = 0;
   out_6912177265995715584[188] = 0;
   out_6912177265995715584[189] = 0;
   out_6912177265995715584[190] = 0;
   out_6912177265995715584[191] = 0;
   out_6912177265995715584[192] = 0;
   out_6912177265995715584[193] = 0;
   out_6912177265995715584[194] = 0;
   out_6912177265995715584[195] = 0;
   out_6912177265995715584[196] = 0;
   out_6912177265995715584[197] = 0;
   out_6912177265995715584[198] = 1;
   out_6912177265995715584[199] = 0;
   out_6912177265995715584[200] = 0;
   out_6912177265995715584[201] = 0;
   out_6912177265995715584[202] = 0;
   out_6912177265995715584[203] = 0;
   out_6912177265995715584[204] = 0;
   out_6912177265995715584[205] = 0;
   out_6912177265995715584[206] = 0;
   out_6912177265995715584[207] = 0;
   out_6912177265995715584[208] = 0;
   out_6912177265995715584[209] = 0;
   out_6912177265995715584[210] = 0;
   out_6912177265995715584[211] = 0;
   out_6912177265995715584[212] = 0;
   out_6912177265995715584[213] = 0;
   out_6912177265995715584[214] = 0;
   out_6912177265995715584[215] = 0;
   out_6912177265995715584[216] = 0;
   out_6912177265995715584[217] = 0;
   out_6912177265995715584[218] = 0;
   out_6912177265995715584[219] = 0;
   out_6912177265995715584[220] = 1;
   out_6912177265995715584[221] = 0;
   out_6912177265995715584[222] = 0;
   out_6912177265995715584[223] = 0;
   out_6912177265995715584[224] = 0;
   out_6912177265995715584[225] = 0;
   out_6912177265995715584[226] = 0;
   out_6912177265995715584[227] = 0;
   out_6912177265995715584[228] = 0;
   out_6912177265995715584[229] = 0;
   out_6912177265995715584[230] = 0;
   out_6912177265995715584[231] = 0;
   out_6912177265995715584[232] = 0;
   out_6912177265995715584[233] = 0;
   out_6912177265995715584[234] = 0;
   out_6912177265995715584[235] = 0;
   out_6912177265995715584[236] = 0;
   out_6912177265995715584[237] = 0;
   out_6912177265995715584[238] = 0;
   out_6912177265995715584[239] = 0;
   out_6912177265995715584[240] = 0;
   out_6912177265995715584[241] = 0;
   out_6912177265995715584[242] = 1;
   out_6912177265995715584[243] = 0;
   out_6912177265995715584[244] = 0;
   out_6912177265995715584[245] = 0;
   out_6912177265995715584[246] = 0;
   out_6912177265995715584[247] = 0;
   out_6912177265995715584[248] = 0;
   out_6912177265995715584[249] = 0;
   out_6912177265995715584[250] = 0;
   out_6912177265995715584[251] = 0;
   out_6912177265995715584[252] = 0;
   out_6912177265995715584[253] = 0;
   out_6912177265995715584[254] = 0;
   out_6912177265995715584[255] = 0;
   out_6912177265995715584[256] = 0;
   out_6912177265995715584[257] = 0;
   out_6912177265995715584[258] = 0;
   out_6912177265995715584[259] = 0;
   out_6912177265995715584[260] = 0;
   out_6912177265995715584[261] = 0;
   out_6912177265995715584[262] = 0;
   out_6912177265995715584[263] = 0;
   out_6912177265995715584[264] = 1;
   out_6912177265995715584[265] = 0;
   out_6912177265995715584[266] = 0;
   out_6912177265995715584[267] = 0;
   out_6912177265995715584[268] = 0;
   out_6912177265995715584[269] = 0;
   out_6912177265995715584[270] = 0;
   out_6912177265995715584[271] = 0;
   out_6912177265995715584[272] = 0;
   out_6912177265995715584[273] = 0;
   out_6912177265995715584[274] = 0;
   out_6912177265995715584[275] = 0;
   out_6912177265995715584[276] = 0;
   out_6912177265995715584[277] = 0;
   out_6912177265995715584[278] = 0;
   out_6912177265995715584[279] = 0;
   out_6912177265995715584[280] = 0;
   out_6912177265995715584[281] = 0;
   out_6912177265995715584[282] = 0;
   out_6912177265995715584[283] = 0;
   out_6912177265995715584[284] = 0;
   out_6912177265995715584[285] = 0;
   out_6912177265995715584[286] = 1;
   out_6912177265995715584[287] = 0;
   out_6912177265995715584[288] = 0;
   out_6912177265995715584[289] = 0;
   out_6912177265995715584[290] = 0;
   out_6912177265995715584[291] = 0;
   out_6912177265995715584[292] = 0;
   out_6912177265995715584[293] = 0;
   out_6912177265995715584[294] = 0;
   out_6912177265995715584[295] = 0;
   out_6912177265995715584[296] = 0;
   out_6912177265995715584[297] = 0;
   out_6912177265995715584[298] = 0;
   out_6912177265995715584[299] = 0;
   out_6912177265995715584[300] = 0;
   out_6912177265995715584[301] = 0;
   out_6912177265995715584[302] = 0;
   out_6912177265995715584[303] = 0;
   out_6912177265995715584[304] = 0;
   out_6912177265995715584[305] = 0;
   out_6912177265995715584[306] = 0;
   out_6912177265995715584[307] = 0;
   out_6912177265995715584[308] = 1;
   out_6912177265995715584[309] = 0;
   out_6912177265995715584[310] = 0;
   out_6912177265995715584[311] = 0;
   out_6912177265995715584[312] = 0;
   out_6912177265995715584[313] = 0;
   out_6912177265995715584[314] = 0;
   out_6912177265995715584[315] = 0;
   out_6912177265995715584[316] = 0;
   out_6912177265995715584[317] = 0;
   out_6912177265995715584[318] = 0;
   out_6912177265995715584[319] = 0;
   out_6912177265995715584[320] = 0;
   out_6912177265995715584[321] = 0;
   out_6912177265995715584[322] = 0;
   out_6912177265995715584[323] = 0;
   out_6912177265995715584[324] = 0;
   out_6912177265995715584[325] = 0;
   out_6912177265995715584[326] = 0;
   out_6912177265995715584[327] = 0;
   out_6912177265995715584[328] = 0;
   out_6912177265995715584[329] = 0;
   out_6912177265995715584[330] = 1;
   out_6912177265995715584[331] = 0;
   out_6912177265995715584[332] = 0;
   out_6912177265995715584[333] = 0;
   out_6912177265995715584[334] = 0;
   out_6912177265995715584[335] = 0;
   out_6912177265995715584[336] = 0;
   out_6912177265995715584[337] = 0;
   out_6912177265995715584[338] = 0;
   out_6912177265995715584[339] = 0;
   out_6912177265995715584[340] = 0;
   out_6912177265995715584[341] = 0;
   out_6912177265995715584[342] = 0;
   out_6912177265995715584[343] = 0;
   out_6912177265995715584[344] = 0;
   out_6912177265995715584[345] = 0;
   out_6912177265995715584[346] = 0;
   out_6912177265995715584[347] = 0;
   out_6912177265995715584[348] = 0;
   out_6912177265995715584[349] = 0;
   out_6912177265995715584[350] = 0;
   out_6912177265995715584[351] = 0;
   out_6912177265995715584[352] = 1;
   out_6912177265995715584[353] = 0;
   out_6912177265995715584[354] = 0;
   out_6912177265995715584[355] = 0;
   out_6912177265995715584[356] = 0;
   out_6912177265995715584[357] = 0;
   out_6912177265995715584[358] = 0;
   out_6912177265995715584[359] = 0;
   out_6912177265995715584[360] = 0;
   out_6912177265995715584[361] = 0;
   out_6912177265995715584[362] = 0;
   out_6912177265995715584[363] = 0;
   out_6912177265995715584[364] = 0;
   out_6912177265995715584[365] = 0;
   out_6912177265995715584[366] = 0;
   out_6912177265995715584[367] = 0;
   out_6912177265995715584[368] = 0;
   out_6912177265995715584[369] = 0;
   out_6912177265995715584[370] = 0;
   out_6912177265995715584[371] = 0;
   out_6912177265995715584[372] = 0;
   out_6912177265995715584[373] = 0;
   out_6912177265995715584[374] = 1;
   out_6912177265995715584[375] = 0;
   out_6912177265995715584[376] = 0;
   out_6912177265995715584[377] = 0;
   out_6912177265995715584[378] = 0;
   out_6912177265995715584[379] = 0;
   out_6912177265995715584[380] = 0;
   out_6912177265995715584[381] = 0;
   out_6912177265995715584[382] = 0;
   out_6912177265995715584[383] = 0;
   out_6912177265995715584[384] = 0;
   out_6912177265995715584[385] = 0;
   out_6912177265995715584[386] = 0;
   out_6912177265995715584[387] = 0;
   out_6912177265995715584[388] = 0;
   out_6912177265995715584[389] = 0;
   out_6912177265995715584[390] = 0;
   out_6912177265995715584[391] = 0;
   out_6912177265995715584[392] = 0;
   out_6912177265995715584[393] = 0;
   out_6912177265995715584[394] = 0;
   out_6912177265995715584[395] = 0;
   out_6912177265995715584[396] = 1;
   out_6912177265995715584[397] = 0;
   out_6912177265995715584[398] = 0;
   out_6912177265995715584[399] = 0;
   out_6912177265995715584[400] = 0;
   out_6912177265995715584[401] = 0;
   out_6912177265995715584[402] = 0;
   out_6912177265995715584[403] = 0;
   out_6912177265995715584[404] = 0;
   out_6912177265995715584[405] = 0;
   out_6912177265995715584[406] = 0;
   out_6912177265995715584[407] = 0;
   out_6912177265995715584[408] = 0;
   out_6912177265995715584[409] = 0;
   out_6912177265995715584[410] = 0;
   out_6912177265995715584[411] = 0;
   out_6912177265995715584[412] = 0;
   out_6912177265995715584[413] = 0;
   out_6912177265995715584[414] = 0;
   out_6912177265995715584[415] = 0;
   out_6912177265995715584[416] = 0;
   out_6912177265995715584[417] = 0;
   out_6912177265995715584[418] = 1;
   out_6912177265995715584[419] = 0;
   out_6912177265995715584[420] = 0;
   out_6912177265995715584[421] = 0;
   out_6912177265995715584[422] = 0;
   out_6912177265995715584[423] = 0;
   out_6912177265995715584[424] = 0;
   out_6912177265995715584[425] = 0;
   out_6912177265995715584[426] = 0;
   out_6912177265995715584[427] = 0;
   out_6912177265995715584[428] = 0;
   out_6912177265995715584[429] = 0;
   out_6912177265995715584[430] = 0;
   out_6912177265995715584[431] = 0;
   out_6912177265995715584[432] = 0;
   out_6912177265995715584[433] = 0;
   out_6912177265995715584[434] = 0;
   out_6912177265995715584[435] = 0;
   out_6912177265995715584[436] = 0;
   out_6912177265995715584[437] = 0;
   out_6912177265995715584[438] = 0;
   out_6912177265995715584[439] = 0;
   out_6912177265995715584[440] = 1;
}
void h_4(double *state, double *unused, double *out_8916029416694195025) {
   out_8916029416694195025[0] = state[10] + state[13];
   out_8916029416694195025[1] = state[11] + state[14];
   out_8916029416694195025[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8350074684178610628) {
   out_8350074684178610628[0] = 0;
   out_8350074684178610628[1] = 0;
   out_8350074684178610628[2] = 0;
   out_8350074684178610628[3] = 0;
   out_8350074684178610628[4] = 0;
   out_8350074684178610628[5] = 0;
   out_8350074684178610628[6] = 0;
   out_8350074684178610628[7] = 0;
   out_8350074684178610628[8] = 0;
   out_8350074684178610628[9] = 0;
   out_8350074684178610628[10] = 1;
   out_8350074684178610628[11] = 0;
   out_8350074684178610628[12] = 0;
   out_8350074684178610628[13] = 1;
   out_8350074684178610628[14] = 0;
   out_8350074684178610628[15] = 0;
   out_8350074684178610628[16] = 0;
   out_8350074684178610628[17] = 0;
   out_8350074684178610628[18] = 0;
   out_8350074684178610628[19] = 0;
   out_8350074684178610628[20] = 0;
   out_8350074684178610628[21] = 0;
   out_8350074684178610628[22] = 0;
   out_8350074684178610628[23] = 0;
   out_8350074684178610628[24] = 0;
   out_8350074684178610628[25] = 0;
   out_8350074684178610628[26] = 0;
   out_8350074684178610628[27] = 0;
   out_8350074684178610628[28] = 0;
   out_8350074684178610628[29] = 0;
   out_8350074684178610628[30] = 0;
   out_8350074684178610628[31] = 0;
   out_8350074684178610628[32] = 0;
   out_8350074684178610628[33] = 1;
   out_8350074684178610628[34] = 0;
   out_8350074684178610628[35] = 0;
   out_8350074684178610628[36] = 1;
   out_8350074684178610628[37] = 0;
   out_8350074684178610628[38] = 0;
   out_8350074684178610628[39] = 0;
   out_8350074684178610628[40] = 0;
   out_8350074684178610628[41] = 0;
   out_8350074684178610628[42] = 0;
   out_8350074684178610628[43] = 0;
   out_8350074684178610628[44] = 0;
   out_8350074684178610628[45] = 0;
   out_8350074684178610628[46] = 0;
   out_8350074684178610628[47] = 0;
   out_8350074684178610628[48] = 0;
   out_8350074684178610628[49] = 0;
   out_8350074684178610628[50] = 0;
   out_8350074684178610628[51] = 0;
   out_8350074684178610628[52] = 0;
   out_8350074684178610628[53] = 0;
   out_8350074684178610628[54] = 0;
   out_8350074684178610628[55] = 0;
   out_8350074684178610628[56] = 1;
   out_8350074684178610628[57] = 0;
   out_8350074684178610628[58] = 0;
   out_8350074684178610628[59] = 1;
   out_8350074684178610628[60] = 0;
   out_8350074684178610628[61] = 0;
   out_8350074684178610628[62] = 0;
   out_8350074684178610628[63] = 0;
   out_8350074684178610628[64] = 0;
   out_8350074684178610628[65] = 0;
}
void h_9(double *state, double *unused, double *out_6653403333976605109) {
   out_6653403333976605109[0] = state[10];
   out_6653403333976605109[1] = state[11];
   out_6653403333976605109[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2809450454266493518) {
   out_2809450454266493518[0] = 0;
   out_2809450454266493518[1] = 0;
   out_2809450454266493518[2] = 0;
   out_2809450454266493518[3] = 0;
   out_2809450454266493518[4] = 0;
   out_2809450454266493518[5] = 0;
   out_2809450454266493518[6] = 0;
   out_2809450454266493518[7] = 0;
   out_2809450454266493518[8] = 0;
   out_2809450454266493518[9] = 0;
   out_2809450454266493518[10] = 1;
   out_2809450454266493518[11] = 0;
   out_2809450454266493518[12] = 0;
   out_2809450454266493518[13] = 0;
   out_2809450454266493518[14] = 0;
   out_2809450454266493518[15] = 0;
   out_2809450454266493518[16] = 0;
   out_2809450454266493518[17] = 0;
   out_2809450454266493518[18] = 0;
   out_2809450454266493518[19] = 0;
   out_2809450454266493518[20] = 0;
   out_2809450454266493518[21] = 0;
   out_2809450454266493518[22] = 0;
   out_2809450454266493518[23] = 0;
   out_2809450454266493518[24] = 0;
   out_2809450454266493518[25] = 0;
   out_2809450454266493518[26] = 0;
   out_2809450454266493518[27] = 0;
   out_2809450454266493518[28] = 0;
   out_2809450454266493518[29] = 0;
   out_2809450454266493518[30] = 0;
   out_2809450454266493518[31] = 0;
   out_2809450454266493518[32] = 0;
   out_2809450454266493518[33] = 1;
   out_2809450454266493518[34] = 0;
   out_2809450454266493518[35] = 0;
   out_2809450454266493518[36] = 0;
   out_2809450454266493518[37] = 0;
   out_2809450454266493518[38] = 0;
   out_2809450454266493518[39] = 0;
   out_2809450454266493518[40] = 0;
   out_2809450454266493518[41] = 0;
   out_2809450454266493518[42] = 0;
   out_2809450454266493518[43] = 0;
   out_2809450454266493518[44] = 0;
   out_2809450454266493518[45] = 0;
   out_2809450454266493518[46] = 0;
   out_2809450454266493518[47] = 0;
   out_2809450454266493518[48] = 0;
   out_2809450454266493518[49] = 0;
   out_2809450454266493518[50] = 0;
   out_2809450454266493518[51] = 0;
   out_2809450454266493518[52] = 0;
   out_2809450454266493518[53] = 0;
   out_2809450454266493518[54] = 0;
   out_2809450454266493518[55] = 0;
   out_2809450454266493518[56] = 1;
   out_2809450454266493518[57] = 0;
   out_2809450454266493518[58] = 0;
   out_2809450454266493518[59] = 0;
   out_2809450454266493518[60] = 0;
   out_2809450454266493518[61] = 0;
   out_2809450454266493518[62] = 0;
   out_2809450454266493518[63] = 0;
   out_2809450454266493518[64] = 0;
   out_2809450454266493518[65] = 0;
}
void h_10(double *state, double *unused, double *out_918541340996360593) {
   out_918541340996360593[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_918541340996360593[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_918541340996360593[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8329946204974122037) {
   out_8329946204974122037[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8329946204974122037[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8329946204974122037[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8329946204974122037[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8329946204974122037[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8329946204974122037[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8329946204974122037[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8329946204974122037[7] = 0;
   out_8329946204974122037[8] = 0;
   out_8329946204974122037[9] = 0;
   out_8329946204974122037[10] = 0;
   out_8329946204974122037[11] = 0;
   out_8329946204974122037[12] = 0;
   out_8329946204974122037[13] = 0;
   out_8329946204974122037[14] = 0;
   out_8329946204974122037[15] = 0;
   out_8329946204974122037[16] = 1;
   out_8329946204974122037[17] = 0;
   out_8329946204974122037[18] = 0;
   out_8329946204974122037[19] = 1;
   out_8329946204974122037[20] = 0;
   out_8329946204974122037[21] = 0;
   out_8329946204974122037[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8329946204974122037[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8329946204974122037[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8329946204974122037[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8329946204974122037[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8329946204974122037[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8329946204974122037[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8329946204974122037[29] = 0;
   out_8329946204974122037[30] = 0;
   out_8329946204974122037[31] = 0;
   out_8329946204974122037[32] = 0;
   out_8329946204974122037[33] = 0;
   out_8329946204974122037[34] = 0;
   out_8329946204974122037[35] = 0;
   out_8329946204974122037[36] = 0;
   out_8329946204974122037[37] = 0;
   out_8329946204974122037[38] = 0;
   out_8329946204974122037[39] = 1;
   out_8329946204974122037[40] = 0;
   out_8329946204974122037[41] = 0;
   out_8329946204974122037[42] = 1;
   out_8329946204974122037[43] = 0;
   out_8329946204974122037[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8329946204974122037[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8329946204974122037[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8329946204974122037[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8329946204974122037[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8329946204974122037[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8329946204974122037[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8329946204974122037[51] = 0;
   out_8329946204974122037[52] = 0;
   out_8329946204974122037[53] = 0;
   out_8329946204974122037[54] = 0;
   out_8329946204974122037[55] = 0;
   out_8329946204974122037[56] = 0;
   out_8329946204974122037[57] = 0;
   out_8329946204974122037[58] = 0;
   out_8329946204974122037[59] = 0;
   out_8329946204974122037[60] = 0;
   out_8329946204974122037[61] = 0;
   out_8329946204974122037[62] = 1;
   out_8329946204974122037[63] = 0;
   out_8329946204974122037[64] = 0;
   out_8329946204974122037[65] = 1;
}
void h_12(double *state, double *unused, double *out_4614050823112628579) {
   out_4614050823112628579[0] = state[0];
   out_4614050823112628579[1] = state[1];
   out_4614050823112628579[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5077212981498979193) {
   out_5077212981498979193[0] = 1;
   out_5077212981498979193[1] = 0;
   out_5077212981498979193[2] = 0;
   out_5077212981498979193[3] = 0;
   out_5077212981498979193[4] = 0;
   out_5077212981498979193[5] = 0;
   out_5077212981498979193[6] = 0;
   out_5077212981498979193[7] = 0;
   out_5077212981498979193[8] = 0;
   out_5077212981498979193[9] = 0;
   out_5077212981498979193[10] = 0;
   out_5077212981498979193[11] = 0;
   out_5077212981498979193[12] = 0;
   out_5077212981498979193[13] = 0;
   out_5077212981498979193[14] = 0;
   out_5077212981498979193[15] = 0;
   out_5077212981498979193[16] = 0;
   out_5077212981498979193[17] = 0;
   out_5077212981498979193[18] = 0;
   out_5077212981498979193[19] = 0;
   out_5077212981498979193[20] = 0;
   out_5077212981498979193[21] = 0;
   out_5077212981498979193[22] = 0;
   out_5077212981498979193[23] = 1;
   out_5077212981498979193[24] = 0;
   out_5077212981498979193[25] = 0;
   out_5077212981498979193[26] = 0;
   out_5077212981498979193[27] = 0;
   out_5077212981498979193[28] = 0;
   out_5077212981498979193[29] = 0;
   out_5077212981498979193[30] = 0;
   out_5077212981498979193[31] = 0;
   out_5077212981498979193[32] = 0;
   out_5077212981498979193[33] = 0;
   out_5077212981498979193[34] = 0;
   out_5077212981498979193[35] = 0;
   out_5077212981498979193[36] = 0;
   out_5077212981498979193[37] = 0;
   out_5077212981498979193[38] = 0;
   out_5077212981498979193[39] = 0;
   out_5077212981498979193[40] = 0;
   out_5077212981498979193[41] = 0;
   out_5077212981498979193[42] = 0;
   out_5077212981498979193[43] = 0;
   out_5077212981498979193[44] = 0;
   out_5077212981498979193[45] = 0;
   out_5077212981498979193[46] = 1;
   out_5077212981498979193[47] = 0;
   out_5077212981498979193[48] = 0;
   out_5077212981498979193[49] = 0;
   out_5077212981498979193[50] = 0;
   out_5077212981498979193[51] = 0;
   out_5077212981498979193[52] = 0;
   out_5077212981498979193[53] = 0;
   out_5077212981498979193[54] = 0;
   out_5077212981498979193[55] = 0;
   out_5077212981498979193[56] = 0;
   out_5077212981498979193[57] = 0;
   out_5077212981498979193[58] = 0;
   out_5077212981498979193[59] = 0;
   out_5077212981498979193[60] = 0;
   out_5077212981498979193[61] = 0;
   out_5077212981498979193[62] = 0;
   out_5077212981498979193[63] = 0;
   out_5077212981498979193[64] = 0;
   out_5077212981498979193[65] = 0;
}
void h_35(double *state, double *unused, double *out_2114289615549349138) {
   out_2114289615549349138[0] = state[7];
   out_2114289615549349138[1] = state[8];
   out_2114289615549349138[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2331649949173965484) {
   out_2331649949173965484[0] = 0;
   out_2331649949173965484[1] = 0;
   out_2331649949173965484[2] = 0;
   out_2331649949173965484[3] = 0;
   out_2331649949173965484[4] = 0;
   out_2331649949173965484[5] = 0;
   out_2331649949173965484[6] = 0;
   out_2331649949173965484[7] = 1;
   out_2331649949173965484[8] = 0;
   out_2331649949173965484[9] = 0;
   out_2331649949173965484[10] = 0;
   out_2331649949173965484[11] = 0;
   out_2331649949173965484[12] = 0;
   out_2331649949173965484[13] = 0;
   out_2331649949173965484[14] = 0;
   out_2331649949173965484[15] = 0;
   out_2331649949173965484[16] = 0;
   out_2331649949173965484[17] = 0;
   out_2331649949173965484[18] = 0;
   out_2331649949173965484[19] = 0;
   out_2331649949173965484[20] = 0;
   out_2331649949173965484[21] = 0;
   out_2331649949173965484[22] = 0;
   out_2331649949173965484[23] = 0;
   out_2331649949173965484[24] = 0;
   out_2331649949173965484[25] = 0;
   out_2331649949173965484[26] = 0;
   out_2331649949173965484[27] = 0;
   out_2331649949173965484[28] = 0;
   out_2331649949173965484[29] = 0;
   out_2331649949173965484[30] = 1;
   out_2331649949173965484[31] = 0;
   out_2331649949173965484[32] = 0;
   out_2331649949173965484[33] = 0;
   out_2331649949173965484[34] = 0;
   out_2331649949173965484[35] = 0;
   out_2331649949173965484[36] = 0;
   out_2331649949173965484[37] = 0;
   out_2331649949173965484[38] = 0;
   out_2331649949173965484[39] = 0;
   out_2331649949173965484[40] = 0;
   out_2331649949173965484[41] = 0;
   out_2331649949173965484[42] = 0;
   out_2331649949173965484[43] = 0;
   out_2331649949173965484[44] = 0;
   out_2331649949173965484[45] = 0;
   out_2331649949173965484[46] = 0;
   out_2331649949173965484[47] = 0;
   out_2331649949173965484[48] = 0;
   out_2331649949173965484[49] = 0;
   out_2331649949173965484[50] = 0;
   out_2331649949173965484[51] = 0;
   out_2331649949173965484[52] = 0;
   out_2331649949173965484[53] = 1;
   out_2331649949173965484[54] = 0;
   out_2331649949173965484[55] = 0;
   out_2331649949173965484[56] = 0;
   out_2331649949173965484[57] = 0;
   out_2331649949173965484[58] = 0;
   out_2331649949173965484[59] = 0;
   out_2331649949173965484[60] = 0;
   out_2331649949173965484[61] = 0;
   out_2331649949173965484[62] = 0;
   out_2331649949173965484[63] = 0;
   out_2331649949173965484[64] = 0;
   out_2331649949173965484[65] = 0;
}
void h_32(double *state, double *unused, double *out_285597393501893108) {
   out_285597393501893108[0] = state[3];
   out_285597393501893108[1] = state[4];
   out_285597393501893108[2] = state[5];
   out_285597393501893108[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2644271644061410512) {
   out_2644271644061410512[0] = 0;
   out_2644271644061410512[1] = 0;
   out_2644271644061410512[2] = 0;
   out_2644271644061410512[3] = 1;
   out_2644271644061410512[4] = 0;
   out_2644271644061410512[5] = 0;
   out_2644271644061410512[6] = 0;
   out_2644271644061410512[7] = 0;
   out_2644271644061410512[8] = 0;
   out_2644271644061410512[9] = 0;
   out_2644271644061410512[10] = 0;
   out_2644271644061410512[11] = 0;
   out_2644271644061410512[12] = 0;
   out_2644271644061410512[13] = 0;
   out_2644271644061410512[14] = 0;
   out_2644271644061410512[15] = 0;
   out_2644271644061410512[16] = 0;
   out_2644271644061410512[17] = 0;
   out_2644271644061410512[18] = 0;
   out_2644271644061410512[19] = 0;
   out_2644271644061410512[20] = 0;
   out_2644271644061410512[21] = 0;
   out_2644271644061410512[22] = 0;
   out_2644271644061410512[23] = 0;
   out_2644271644061410512[24] = 0;
   out_2644271644061410512[25] = 0;
   out_2644271644061410512[26] = 1;
   out_2644271644061410512[27] = 0;
   out_2644271644061410512[28] = 0;
   out_2644271644061410512[29] = 0;
   out_2644271644061410512[30] = 0;
   out_2644271644061410512[31] = 0;
   out_2644271644061410512[32] = 0;
   out_2644271644061410512[33] = 0;
   out_2644271644061410512[34] = 0;
   out_2644271644061410512[35] = 0;
   out_2644271644061410512[36] = 0;
   out_2644271644061410512[37] = 0;
   out_2644271644061410512[38] = 0;
   out_2644271644061410512[39] = 0;
   out_2644271644061410512[40] = 0;
   out_2644271644061410512[41] = 0;
   out_2644271644061410512[42] = 0;
   out_2644271644061410512[43] = 0;
   out_2644271644061410512[44] = 0;
   out_2644271644061410512[45] = 0;
   out_2644271644061410512[46] = 0;
   out_2644271644061410512[47] = 0;
   out_2644271644061410512[48] = 0;
   out_2644271644061410512[49] = 1;
   out_2644271644061410512[50] = 0;
   out_2644271644061410512[51] = 0;
   out_2644271644061410512[52] = 0;
   out_2644271644061410512[53] = 0;
   out_2644271644061410512[54] = 0;
   out_2644271644061410512[55] = 0;
   out_2644271644061410512[56] = 0;
   out_2644271644061410512[57] = 0;
   out_2644271644061410512[58] = 0;
   out_2644271644061410512[59] = 0;
   out_2644271644061410512[60] = 0;
   out_2644271644061410512[61] = 0;
   out_2644271644061410512[62] = 0;
   out_2644271644061410512[63] = 0;
   out_2644271644061410512[64] = 0;
   out_2644271644061410512[65] = 0;
   out_2644271644061410512[66] = 0;
   out_2644271644061410512[67] = 0;
   out_2644271644061410512[68] = 0;
   out_2644271644061410512[69] = 0;
   out_2644271644061410512[70] = 0;
   out_2644271644061410512[71] = 0;
   out_2644271644061410512[72] = 1;
   out_2644271644061410512[73] = 0;
   out_2644271644061410512[74] = 0;
   out_2644271644061410512[75] = 0;
   out_2644271644061410512[76] = 0;
   out_2644271644061410512[77] = 0;
   out_2644271644061410512[78] = 0;
   out_2644271644061410512[79] = 0;
   out_2644271644061410512[80] = 0;
   out_2644271644061410512[81] = 0;
   out_2644271644061410512[82] = 0;
   out_2644271644061410512[83] = 0;
   out_2644271644061410512[84] = 0;
   out_2644271644061410512[85] = 0;
   out_2644271644061410512[86] = 0;
   out_2644271644061410512[87] = 0;
}
void h_13(double *state, double *unused, double *out_1279256425300719448) {
   out_1279256425300719448[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1279256425300719448[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1279256425300719448[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3568707709605355491) {
   out_3568707709605355491[0] = 0;
   out_3568707709605355491[1] = 0;
   out_3568707709605355491[2] = 0;
   out_3568707709605355491[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3568707709605355491[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3568707709605355491[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3568707709605355491[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3568707709605355491[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3568707709605355491[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3568707709605355491[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3568707709605355491[10] = 0;
   out_3568707709605355491[11] = 0;
   out_3568707709605355491[12] = 0;
   out_3568707709605355491[13] = 0;
   out_3568707709605355491[14] = 0;
   out_3568707709605355491[15] = 0;
   out_3568707709605355491[16] = 0;
   out_3568707709605355491[17] = 0;
   out_3568707709605355491[18] = 0;
   out_3568707709605355491[19] = 0;
   out_3568707709605355491[20] = 0;
   out_3568707709605355491[21] = 0;
   out_3568707709605355491[22] = 0;
   out_3568707709605355491[23] = 0;
   out_3568707709605355491[24] = 0;
   out_3568707709605355491[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3568707709605355491[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3568707709605355491[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3568707709605355491[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3568707709605355491[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3568707709605355491[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3568707709605355491[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3568707709605355491[32] = 0;
   out_3568707709605355491[33] = 0;
   out_3568707709605355491[34] = 0;
   out_3568707709605355491[35] = 0;
   out_3568707709605355491[36] = 0;
   out_3568707709605355491[37] = 0;
   out_3568707709605355491[38] = 0;
   out_3568707709605355491[39] = 0;
   out_3568707709605355491[40] = 0;
   out_3568707709605355491[41] = 0;
   out_3568707709605355491[42] = 0;
   out_3568707709605355491[43] = 0;
   out_3568707709605355491[44] = 0;
   out_3568707709605355491[45] = 0;
   out_3568707709605355491[46] = 0;
   out_3568707709605355491[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3568707709605355491[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3568707709605355491[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3568707709605355491[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3568707709605355491[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3568707709605355491[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3568707709605355491[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3568707709605355491[54] = 0;
   out_3568707709605355491[55] = 0;
   out_3568707709605355491[56] = 0;
   out_3568707709605355491[57] = 0;
   out_3568707709605355491[58] = 0;
   out_3568707709605355491[59] = 0;
   out_3568707709605355491[60] = 0;
   out_3568707709605355491[61] = 0;
   out_3568707709605355491[62] = 0;
   out_3568707709605355491[63] = 0;
   out_3568707709605355491[64] = 0;
   out_3568707709605355491[65] = 0;
}
void h_14(double *state, double *unused, double *out_6653403333976605109) {
   out_6653403333976605109[0] = state[10];
   out_6653403333976605109[1] = state[11];
   out_6653403333976605109[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2809450454266493518) {
   out_2809450454266493518[0] = 0;
   out_2809450454266493518[1] = 0;
   out_2809450454266493518[2] = 0;
   out_2809450454266493518[3] = 0;
   out_2809450454266493518[4] = 0;
   out_2809450454266493518[5] = 0;
   out_2809450454266493518[6] = 0;
   out_2809450454266493518[7] = 0;
   out_2809450454266493518[8] = 0;
   out_2809450454266493518[9] = 0;
   out_2809450454266493518[10] = 1;
   out_2809450454266493518[11] = 0;
   out_2809450454266493518[12] = 0;
   out_2809450454266493518[13] = 0;
   out_2809450454266493518[14] = 0;
   out_2809450454266493518[15] = 0;
   out_2809450454266493518[16] = 0;
   out_2809450454266493518[17] = 0;
   out_2809450454266493518[18] = 0;
   out_2809450454266493518[19] = 0;
   out_2809450454266493518[20] = 0;
   out_2809450454266493518[21] = 0;
   out_2809450454266493518[22] = 0;
   out_2809450454266493518[23] = 0;
   out_2809450454266493518[24] = 0;
   out_2809450454266493518[25] = 0;
   out_2809450454266493518[26] = 0;
   out_2809450454266493518[27] = 0;
   out_2809450454266493518[28] = 0;
   out_2809450454266493518[29] = 0;
   out_2809450454266493518[30] = 0;
   out_2809450454266493518[31] = 0;
   out_2809450454266493518[32] = 0;
   out_2809450454266493518[33] = 1;
   out_2809450454266493518[34] = 0;
   out_2809450454266493518[35] = 0;
   out_2809450454266493518[36] = 0;
   out_2809450454266493518[37] = 0;
   out_2809450454266493518[38] = 0;
   out_2809450454266493518[39] = 0;
   out_2809450454266493518[40] = 0;
   out_2809450454266493518[41] = 0;
   out_2809450454266493518[42] = 0;
   out_2809450454266493518[43] = 0;
   out_2809450454266493518[44] = 0;
   out_2809450454266493518[45] = 0;
   out_2809450454266493518[46] = 0;
   out_2809450454266493518[47] = 0;
   out_2809450454266493518[48] = 0;
   out_2809450454266493518[49] = 0;
   out_2809450454266493518[50] = 0;
   out_2809450454266493518[51] = 0;
   out_2809450454266493518[52] = 0;
   out_2809450454266493518[53] = 0;
   out_2809450454266493518[54] = 0;
   out_2809450454266493518[55] = 0;
   out_2809450454266493518[56] = 1;
   out_2809450454266493518[57] = 0;
   out_2809450454266493518[58] = 0;
   out_2809450454266493518[59] = 0;
   out_2809450454266493518[60] = 0;
   out_2809450454266493518[61] = 0;
   out_2809450454266493518[62] = 0;
   out_2809450454266493518[63] = 0;
   out_2809450454266493518[64] = 0;
   out_2809450454266493518[65] = 0;
}
void h_33(double *state, double *unused, double *out_8814764392384913901) {
   out_8814764392384913901[0] = state[16];
   out_8814764392384913901[1] = state[17];
   out_8814764392384913901[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3579450327519476008) {
   out_3579450327519476008[0] = 0;
   out_3579450327519476008[1] = 0;
   out_3579450327519476008[2] = 0;
   out_3579450327519476008[3] = 0;
   out_3579450327519476008[4] = 0;
   out_3579450327519476008[5] = 0;
   out_3579450327519476008[6] = 0;
   out_3579450327519476008[7] = 0;
   out_3579450327519476008[8] = 0;
   out_3579450327519476008[9] = 0;
   out_3579450327519476008[10] = 0;
   out_3579450327519476008[11] = 0;
   out_3579450327519476008[12] = 0;
   out_3579450327519476008[13] = 0;
   out_3579450327519476008[14] = 0;
   out_3579450327519476008[15] = 0;
   out_3579450327519476008[16] = 1;
   out_3579450327519476008[17] = 0;
   out_3579450327519476008[18] = 0;
   out_3579450327519476008[19] = 0;
   out_3579450327519476008[20] = 0;
   out_3579450327519476008[21] = 0;
   out_3579450327519476008[22] = 0;
   out_3579450327519476008[23] = 0;
   out_3579450327519476008[24] = 0;
   out_3579450327519476008[25] = 0;
   out_3579450327519476008[26] = 0;
   out_3579450327519476008[27] = 0;
   out_3579450327519476008[28] = 0;
   out_3579450327519476008[29] = 0;
   out_3579450327519476008[30] = 0;
   out_3579450327519476008[31] = 0;
   out_3579450327519476008[32] = 0;
   out_3579450327519476008[33] = 0;
   out_3579450327519476008[34] = 0;
   out_3579450327519476008[35] = 0;
   out_3579450327519476008[36] = 0;
   out_3579450327519476008[37] = 0;
   out_3579450327519476008[38] = 0;
   out_3579450327519476008[39] = 1;
   out_3579450327519476008[40] = 0;
   out_3579450327519476008[41] = 0;
   out_3579450327519476008[42] = 0;
   out_3579450327519476008[43] = 0;
   out_3579450327519476008[44] = 0;
   out_3579450327519476008[45] = 0;
   out_3579450327519476008[46] = 0;
   out_3579450327519476008[47] = 0;
   out_3579450327519476008[48] = 0;
   out_3579450327519476008[49] = 0;
   out_3579450327519476008[50] = 0;
   out_3579450327519476008[51] = 0;
   out_3579450327519476008[52] = 0;
   out_3579450327519476008[53] = 0;
   out_3579450327519476008[54] = 0;
   out_3579450327519476008[55] = 0;
   out_3579450327519476008[56] = 0;
   out_3579450327519476008[57] = 0;
   out_3579450327519476008[58] = 0;
   out_3579450327519476008[59] = 0;
   out_3579450327519476008[60] = 0;
   out_3579450327519476008[61] = 0;
   out_3579450327519476008[62] = 1;
   out_3579450327519476008[63] = 0;
   out_3579450327519476008[64] = 0;
   out_3579450327519476008[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5016230871221336976) {
  H(in_vec, out_5016230871221336976);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5032561234954820223) {
  err_fun(nom_x, delta_x, out_5032561234954820223);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7628702518424614071) {
  inv_err_fun(nom_x, true_x, out_7628702518424614071);
}
void live_H_mod_fun(double *state, double *out_5936276057900918229) {
  H_mod_fun(state, out_5936276057900918229);
}
void live_f_fun(double *state, double dt, double *out_7894718411447825024) {
  f_fun(state,  dt, out_7894718411447825024);
}
void live_F_fun(double *state, double dt, double *out_6912177265995715584) {
  F_fun(state,  dt, out_6912177265995715584);
}
void live_h_4(double *state, double *unused, double *out_8916029416694195025) {
  h_4(state, unused, out_8916029416694195025);
}
void live_H_4(double *state, double *unused, double *out_8350074684178610628) {
  H_4(state, unused, out_8350074684178610628);
}
void live_h_9(double *state, double *unused, double *out_6653403333976605109) {
  h_9(state, unused, out_6653403333976605109);
}
void live_H_9(double *state, double *unused, double *out_2809450454266493518) {
  H_9(state, unused, out_2809450454266493518);
}
void live_h_10(double *state, double *unused, double *out_918541340996360593) {
  h_10(state, unused, out_918541340996360593);
}
void live_H_10(double *state, double *unused, double *out_8329946204974122037) {
  H_10(state, unused, out_8329946204974122037);
}
void live_h_12(double *state, double *unused, double *out_4614050823112628579) {
  h_12(state, unused, out_4614050823112628579);
}
void live_H_12(double *state, double *unused, double *out_5077212981498979193) {
  H_12(state, unused, out_5077212981498979193);
}
void live_h_35(double *state, double *unused, double *out_2114289615549349138) {
  h_35(state, unused, out_2114289615549349138);
}
void live_H_35(double *state, double *unused, double *out_2331649949173965484) {
  H_35(state, unused, out_2331649949173965484);
}
void live_h_32(double *state, double *unused, double *out_285597393501893108) {
  h_32(state, unused, out_285597393501893108);
}
void live_H_32(double *state, double *unused, double *out_2644271644061410512) {
  H_32(state, unused, out_2644271644061410512);
}
void live_h_13(double *state, double *unused, double *out_1279256425300719448) {
  h_13(state, unused, out_1279256425300719448);
}
void live_H_13(double *state, double *unused, double *out_3568707709605355491) {
  H_13(state, unused, out_3568707709605355491);
}
void live_h_14(double *state, double *unused, double *out_6653403333976605109) {
  h_14(state, unused, out_6653403333976605109);
}
void live_H_14(double *state, double *unused, double *out_2809450454266493518) {
  H_14(state, unused, out_2809450454266493518);
}
void live_h_33(double *state, double *unused, double *out_8814764392384913901) {
  h_33(state, unused, out_8814764392384913901);
}
void live_H_33(double *state, double *unused, double *out_3579450327519476008) {
  H_33(state, unused, out_3579450327519476008);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
